- tradurre le notifiche e i messaggi logger - NO
- rivedere /api/user/updateUserProperty (e successive) come /api/user/updateUser - NO
- cambiare nomi controllers: controllers/articles.controllers.js => controllers/articles.js - NO
- gestire le traduzioni delle risposte (in base a "accept-language") - OK
- res.status().send -> res.status().json - OK
- cambiare "we" in una forma impersonale - OK
- usare req.t("text") per tutti i testi - OK
- tradurre tutto in locales/ (cercando le stringhe vuote, "") - OK
- nella registrazione, in caso di email già presente, controllare se non è verificato, e comunicarlo all'utente - OK
- implementare TTL per le collezioni mongodb con scadenza - OK
- impostare tests con chai - OK
- logger, accesso utente: no data ma email nel soggetto - OK
- in test/controllers/user.test.js, test updatePlan e updateRoles - OK
- tradurre anche middlewares, helpers - OK
- rimuovere i console.* (a parte i console.errors nel logger controller setup) - OK
- add logger.error in tutte le catch - OK
- usare sempre req.parameters e non req.body o req.query - OK
- risolvere la confusione x-access-token / x-auth-token - OK
- usare Authentication Bearer insted of x-auth-toksn (on client too) - OK
- invece di module.exports = { ... } nei moduli, usare exports individuali - OK
- verificare che ./public/badges serva (usato in coverage) - OK
- attivare repository git - OK
- SENDMAIL_FROM_EMAIL - OK
- gestire invio email con smtp di gmail (account: sistemisolari@gmail.com) - OK
- verificare che dynamicStringsForTranslation funzioni e sia aggiornato - OK
- gestire email templates con i18n - OK
- verificare se esiste un tool per trovare dipendenze non utilizzato, ed eliminarle - OK
- verificare se esiste un tool per trovare parti di codice non utilizzato, ed eliminarle - OK
- verificare che ./public/images serva - OK
- implementare invio email html ad una lista di utenti - OK
- aggiungere "Please contact support at {{email}}" ai messaggi di errore (500) - OK
- usare jwt sia per access che refresh tokens (?) - OK
- in tutti i controller di routes, in caso di errore fare sempre: catch (err) { logger.error("Error BLA BLA:", err);
  return next(Object.assign(new Error(err.message), { status: 500 })); }; - OK
- testare sempre le interazioni col database (i.e.: user.save(err => { ...}))
- aggiungere `next(err); // pass the error to the error handling middleware` alle catch di tutte le routes - OK
- ripulire tutto il codice dalle parti commentate (disabilitate) - OK
- completare il coverage dei tests - OK
- eliminare tutti i NODE_ENV non necessari - OK
- completare e pulire il file README.md, e pulire NOTES
- verificare che i18n becchi tuttle le traduzioni nei templates - OK
- test "should remove all users with admin privileges" si blocca (tutti gli utenti isDeleted) - OK
- css, logo, [unsubscribe-link] and [preferences-link] nei templates delle email - OK
- quando si registra un utente, accettare anche utenti in stato isDeleted
  (attualmente no, si potrebbe poi implementare un pruning degli utenti cancellati...) - OK
- aggiungere language nel doc user, settarlo in fase di login da req.language,
  e usarlo quando si inviano emails bulk, e testare il tutto - OK
- aggiungere un tool per il controllo di secrets nel codice - OK
- decidere come gestire le notifiche in produzione (betterstack) - OK
- correggere "Error looking for..." in "Error finding ..." - OK
- http://localhost:5000/api/auth ritorna correttamente JSON, ma http://localhost:5000/api ritorna HTML - OK
- resetpassword: se email non trovata, non andare subito in errore, per ridurre la superficie d'attacco... - OK
- fare script per iniettare un config di produzione per i casi di staging e production, sul server,
  richiamabile dal client prime delle build - OK
- spostare le variabili non-secret da .env.dev a db.config - OK
- disabilitare `app.use(morgan)` (api server requests log) in server.js, in produzione
  (no, accodato stream morgan a winston) - OK
- logger.xxx(a, b, c) => logger.xxx(`{a} ${b} ${c}`); - OK
- aggiungere il dominio delle icone delle bandiere del componente del telefono in helmet exceptions - OK
- modificare gli errori con (@ ... @), distinguerli solo nel testo - OK
- nel login via email, cercare per email/password e socialId... se si trova email con socialId,
  dire all'utente di autenticarsi con il social, oppure registrare un nuovo account... - OK
- capitalizzare tutti i messaggi (ove possibile) - OK
- capire perchè al sign-out, spesso lato client si ottiene la warning "la sessione non ha token..." - OK
- server+client: language => locale (GLOBALMENTE) - OK
- rimpiazzare i console.* con Logger.*, oppure rimuoverli... - OK
- on logout "no token from input" - OK
- on accessing authenticated routes, user get "no respnse from server" instead of "you must be authenticated"... - OK
- disable http logs from Winston setup - OK
- undefined err when sending email to users, and nothing in logs - OK
- always use collation: "it" and strength: "1" in mongoose searches - see https://chatgpt.com/share/675bc8e5-6194-8003-8c43-dc1eb9fc82cd (used diacritics regexp function) - OK
- trap regexp errors in model post find (no, convert regexp to string) - OK
- forget about papertrail - OK
- log meta (2nd, ... params) too - see https://chatgpt.com/c/6760ef50-1bb8-8003-96d3-693dded2f67f - OK
- reduce watermark image size - OK
- enforce 3GB persistent volume storage (total) if fly free tier 
- do not create images statically when creating database products collection, since persistent volume is not yet mounted... (probably) - OK
- remove err description from audit subject - OK
- bettertstack: [{"LEVEL": "ERROR"}] => [ERROR] - OK
- remove last full err from audit body - OK
- remove Gmail filter to set already read messages from acme - OK
- add stack to all errors... - OK
- in production product images are not retained - see https://chatgpt.com/share/67639261-a938-8003-a70b-b90dc683aaef,
  use fly.io persistent volumes, and add a check to avoid exceeding maximum allowed space in the free tier - OK
- replace mailto:support@yourcompany.com with config.email.support... - OK
- alle volte si vede ancora "Devi essere autenticato per questa azione" al logout - OK
- use API_KEY from ../medicare-server/.env in scripts/translate - OK
- integrate scripts/translate.py in yarn pub script (at requezt) - OK
- IP to flag: se sono 2, scegliere il primo - OK
- audit mode: [ACTION], non è bello... - OK
- in "Payment successful" audit message body, include customer's delivery options and address... - OK
- setup and test a working staging environment: same as prod, but with a different database and different baseUrl - OK
- change "log" con "sign" (out/in/up/...) - OK
- finish handling isGift (use it in audit of payment completed) - OK
- make tests - OK
- winston colorize does not seem to work in any transport - OK

- server.sinon => sinon, server.expect => expect ...
- reinstall from scratch (possibly on a fresh system), and compile README file
- implement complete deletion of "own" user account (not reserved for admin, but also to logged users)
- always do `const productId = mongoose.Types.ObjectId(req.parameters.productId);` for every endpoint using an objectId from parameters
- review NOTES, clean it up...

NEWFEATURE:
- after social login, assign a default role to user ("user") ...
- make more tests (use also AI for this...)
- configurare un account su Cloudflare...
- gestire email unsubscribe (clientEmailUnsubscribeUrl = `${clientBaseUrl}/email-unsubscribe`)
- gestire email preferences (clientEmailPreferencesUrl = `${clientBaseUrl}/email-preferences`)
- gestire "justRegistered" (se sarà necessario)
- rimuovere gli account "non confermati", periodicamente (quando sarà necessario)
- rimuovere gli account "rimossi", periodicamente (quando sarà necessario)
- aggiungere l'anno di riferimento ai prodotti stripe (quando saranno usati)
